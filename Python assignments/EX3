''' Exercise #3. Python for Engineers.'''

#########################################
# Question 1 - do not delete this comment
#########################################
def sum_divisible_by_k(lst, k):            
    
    sum_num=0    
    for i in range(len(lst)):
        if lst[i]%k==0:
            sum_num=sum_num+(lst[i])
    return sum_num   
     

#########################################
# Question 2 - do not delete this comment
#########################################
def mult_odd_digits(n):
    count=1
    n=str(n)
    for i in range(len(str(n))):
        if int(n[i])%2!=0:
            count=count*int(n[i])
    return count
 


#########################################
# Question 3 - do not delete this comment
#########################################
def count_longest_repetition(s, c):
    list_count=['0']
    counter=0
    if c not in s:
        return 0
     
     
    elif c*len(s)==s:
        return len(s)
    
    
    
    for i in range(len(s)):
        if s[i]==c:
            counter=counter+1
        else:
            list_count.append(counter*s[i-1])
            
            counter=0 
  
    return len(max(list_count))




#########################################
# Question 4 - do not delete this comment
#########################################
def upper_strings(lst):  
            
    
    if(type(lst)==list):
      
      
        for i in range(len(lst)):
            if type(lst[i])==str:
                
                
                   
                lst[i]=lst[i].upper()         
                   
            else:
                lst[i]=lst[i]
    
         
    else:
         
        return (-1)    
  


#########################################
# Question 5 - do not delete this comment
#########################################
def div_mat_by_scalar(mat, alpha):
    new_mat=[]
    sub=[]
    for i in range(len(mat)):
        for j in range(len(mat[i])): 
           sub.append(mat[i][j]//alpha)  
        new_mat.append(sub)
        sub=[]
    return(new_mat)

    




#########################################
# Question 6 - do not delete this comment
#########################################
def mat_transpose(mat):
    
    rows=len(mat)
    tour=len(mat[0])
    sub=[]
    new_mat=[]
    
    for i in range(tour):
        for j in range(rows):
            sub.append(mat[j][i])
        new_mat.append(sub)   
        sub=[]
    
    return new_mat


    
#########################
# main code - do not delete this comment
# Tests have been added for your convenience.
# You can add more tests below.
#########################

print(sum_divisible_by_k([3, 6, 4, 10, 9], 3) == 18)
print(sum_divisible_by_k([45.5, 60, 73, 48], 4) == 108)


print(mult_odd_digits(5638) == 15)
print(mult_odd_digits(2048) == 1)
print(mult_odd_digits(54984127) == 315)


print(count_longest_repetition('eabbaaaacccaaddd', 'a') == 4)
print(count_longest_repetition ('cccccc','c') == 6)
print(count_longest_repetition ('abcde', 'z') == 0)


vals = [11, 'TeSt', 3.14, 'cAsE']
upper_strings(vals)
print(vals == [11, 'TEST', 3.14, 'CASE'])

vals = [-5, None, True, [1, 'dont change me', 3]]
upper_strings(vals)
print(vals == [-5, None, True, [1, 'dont change me', 3]])

print(upper_strings(42) == -1)
print(upper_strings('im not a list') == -1)
print(upper_strings(False) == -1)


mat1 = [[2, 4], [6, 8]]
mat2 = div_mat_by_scalar(mat1, 2)
print(mat1 == [[2, 4], [6, 8]])
print(mat2 == [[1, 2], [3, 4]])

print(div_mat_by_scalar([[10,15], [-3,6]], -5) == [[-2, -3], [0, -2]])


mat = [[1,2],[3,4],[5,6]]
mat_T = mat_transpose(mat)
print(mat == [[1, 2], [3, 4], [5, 6]])
print(mat_T == [[1, 3, 5], [2, 4, 6]])

mat2 = [[0, 1, 2], [10, 11, 12], [20, 21, 22]]
mat2_T = mat_transpose(mat2)
print(mat2_T == [[0, 10, 20], [1, 11, 21], [2, 12, 22]])


# ============================== END OF FILE =================================

