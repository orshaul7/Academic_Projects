''' Exercise #6. Python for Engineers.'''

#########################################
# Question 1 - do not delete this comment
#########################################
def reverse_string(s):
    
    
    if s=='':
        return s
    
    first_char=s[0]
    rest_s=s[1:]
    last_char=reverse_string(rest_s) 
    new_s=last_char+first_char
    
    
    return new_s
    




#########################################
# Question 2 - do not delete this comment
#########################################
#def find_maximum(lst):
def find_maximum(lst):                                                
    if len(lst)==0:
        return -1
    if len(lst) == 1:
        return lst[0]
    else:
        m = find_maximum(lst[1:])
        return m if m > lst[0] else lst[0]
  
 
    
        
#########################################
# Question 3 - do not delete this comment
#########################################
def is_palindrome(s):
    
    if len(s) in [0,1]:
        return True
    if s[0] != s[-1]:
        return False
    return is_palindrome(s[1:len(s)-1])
 

 

#########################################
# Question 4 - do not delete this comment
#########################################
def climb_combinations(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    result = climb_combinations(n-1)  + climb_combinations(n-2)
    return result

#########################################
# Question 5 - do not delete this comment
#########################################
def is_valid_paren(s, cnt=0):
    
    if s=="" and cnt==0:
      return True
    
    elif s=="":
        return False
    
    if cnt<0:
     
      return False
    
    if s[0]=="(":
      cnt=cnt+1
      return is_valid_paren(s[1:], cnt)
    
    if s[0]==")":
      cnt=cnt-1
    
     
      return is_valid_paren(s[1:], cnt)
    
    if s[0]!="(":
      return is_valid_paren(s[1:], cnt)
    
     
 

#########################
# main code - do not delete this comment
# Tests have been added for your convenience.
# You can add more tests below.
#########################
if __name__ == "__main__":
    #you can add tests for your code here.
    
    assert(reverse_string("abc") == 'cba')
    assert(reverse_string("Hello!") == '!olleH')

    assert(find_maximum([9,3,0,10]) == 10)
    assert(find_maximum([9,3,0]) == 9)
    assert(find_maximum([]) == -1)

    assert(is_palindrome("aa") == True)
    assert(is_palindrome("aa ") == False)
    assert(is_palindrome("caca") == False)
    assert(is_palindrome("abcbbcba") == True)

    assert(climb_combinations(3) == 3)
    assert(climb_combinations(10) == 89)

    assert(is_valid_paren("(.(a)") == False)
    assert(is_valid_paren("p(()r((0)))") == True)
    assert(is_valid_paren("") == True)

# ============================== END OF FILE =================================

