.word 0x100 8         # we set the value of n 
.word 0x101 5         # we set the value of k



sll $sp, $imm1, $imm2, $zero, 1, 11		# set $sp = 1 << 11 = 2048
lw $a1, $zero, $imm2, $zero, 0, 0x101		# get k from address 0x101
lw $a0, $zero, $imm2, $zero, 0, 0x100		# get n from address 0x100

jal $ra, $zero, $zero, $imm2, 0, Binom		# we calculate binom(n,k) and saving it into $v0
sw $zero, $zero, $imm2, $v0, 0, 0x102		# we store the binom(n,k) result in 0x0102
halt $zero, $zero, $zero, $zero, 0, 0		# halt

Binom:

add $sp, $sp, $imm2, $zero, 0, -4		# making enough space in stack for 4 items
sw $zero, $sp, $imm2, $s0, 0, 3		    # save $s0
sw $zero, $sp, $imm2, $ra, 0, 2		    # save return address
sw $zero, $sp, $imm2, $a0, 0, 1		    # save argument n
sw $zero, $sp, $imm2, $a1, 0, 0         # save argument k


beq $zero, $a1, $zero, $imm2, 0, L1		# if k=0 jump to L1
beq $zero, $a0, $a1, $imm2, 0, L1		# if n=k jump to L1

L2:

sub $a0, $a0, $imm2, $zero, 0, 1		    # now we calculate n- 1
jal $ra, $zero, $zero, $imm2, 0, Binom		# we calculate binom(n-1,k) and saving it into $v0
add $s0, $v0, $imm2, $zero, 0, 0		    # $s0 = binom(n-1,k)
sub $a1, $a1, $imm2, $zero, 0, 1		    # calculate k- 1
jal $ra, $zero, $zero, $imm2, 0, Binom		# calc binom(n-1,k-1)
add $v0, $v0, $s0, $zero, 0, 0		        # $v0 = binom(n-1,k)+binom(n-1,k-1)
beq $zero, $zero, $zero, $imm2, 0, ret	    # jump to ret

L1:
add $v0, $zero, $zero, $imm1, 1, 0		    # base case $v0 =1

ret:
lw $a1, $sp, $imm2, $zero, 0, 0		        # restore $a1
lw $a0, $sp, $imm2, $zero, 0, 1		        # restore $a0
lw $ra, $sp, $imm2, $zero, 0, 2			    # restore $ra
lw $s0, $sp, $imm2, $zero, 0, 3		        # restore $s0
add $sp, $sp, $imm2, $zero, 0, 4		    # close stack
beq $zero, $zero, $zero, $ra, 0, 0	        # returning to caller function


